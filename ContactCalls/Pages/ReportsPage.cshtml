@page "/reports"
@model ContactCalls.Pages.ReportsPageModel
@{
    ViewData["Title"] = "Отчеты";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1>Отчеты и аналитика</h1>
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-outline-primary" id="refreshReportsButton">
                        <i class="fas fa-sync-alt"></i> Обновить данные
                    </button>
                    <button type="button" class="btn btn-outline-success" id="exportButton">
                        <i class="fas fa-download"></i> Экспорт
                    </button>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <label for="reportStartDate" class="form-label">Дата от</label>
                            <input type="date" class="form-control" id="reportStartDate">
                        </div>
                        <div class="col-md-3">
                            <label for="reportEndDate" class="form-label">Дата до</label>
                            <input type="date" class="form-control" id="reportEndDate">
                        </div>
                        <div class="col-md-3">
                            <label for="reportPhoneFilter" class="form-label">Телефон</label>
                            <select class="form-select" id="reportPhoneFilter">
                                <option value="">Все телефоны</option>
                            </select>
                        </div>
                        <div class="col-md-3 d-flex align-items-end">
                            <button type="button" class="btn btn-primary" id="generateReportButton">
                                <i class="fas fa-chart-bar"></i> Сформировать отчет
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card text-white bg-primary">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h5 class="card-title">Всего звонков</h5>
                                    <h2 id="statsTotal">0</h2>
                                </div>
                                <div class="align-self-center">
                                    <i class="fas fa-phone fa-2x"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-success">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h5 class="card-title">Исходящие</h5>
                                    <h2 id="statsOutgoing">0</h2>
                                </div>
                                <div class="align-self-center">
                                    <i class="fas fa-phone-slash fa-2x"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-info">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h5 class="card-title">Входящие</h5>
                                    <h2 id="statsIncoming">0</h2>
                                </div>
                                <div class="align-self-center">
                                    <i class="fas fa-phone-volume fa-2x"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-warning">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h5 class="card-title">Пропущенные</h5>
                                    <h2 id="statsMissed">0</h2>
                                </div>
                                <div class="align-self-center">
                                    <i class="fas fa-phone-times fa-2x"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-chart-pie me-2"></i>Распределение звонков по статусу
                            </h5>
                        </div>
                        <div class="card-body">
                            <canvas id="statusChart" width="400" height="300"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-chart-bar me-2"></i>Длительность и стоимость
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row text-center">
                                <div class="col-md-6">
                                    <h6>Общая длительность</h6>
                                    <h4 id="totalDuration" class="text-primary">00:00:00</h4>
                                </div>
                                <div class="col-md-6">
                                    <h6>Общая стоимость</h6>
                                    <h4 id="totalCost" class="text-success">0.00 ₽</h4>
                                </div>
                            </div>
                            <hr>
                            <div class="row text-center">
                                <div class="col-md-6">
                                    <h6>Средняя длительность</h6>
                                    <h5 id="avgDuration" class="text-info">00:00:00</h5>
                                </div>
                                <div class="col-md-6">
                                    <h6>Средняя стоимость</h6>
                                    <h5 id="avgCost" class="text-warning">0.00 ₽</h5>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-file-invoice-dollar me-2"></i>Детализация биллинга
                            </h5>
                            <div class="d-flex align-items-center">
                                <span class="me-3"><strong>Итого: <span id="billingTotal" class="text-success">0.00 ₽</span></strong></span>
                                <button type="button" class="btn btn-sm btn-outline-primary" id="toggleBillingButton">
                                    <i class="fas fa-eye"></i> Показать/Скрыть
                                </button>
                            </div>
                        </div>
                        <div class="card-body" id="billingTableContainer" style="display: none;">
                            <div class="table-responsive">
                                <table class="table table-striped table-hover" id="billingTable">
                                    <thead class="table-dark">
                                        <tr>
                                            <th>ID звонка</th>
                                            <th>Дата и время</th>
                                            <th>От</th>
                                            <th>Кому</th>
                                            <th>Длительность</th>
                                            <th>Стоимость</th>
                                        </tr>
                                    </thead>
                                    <tbody id="billingTableBody">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <script>
        let phonesData = [];
        let currentStatistics = null;
        let currentBilling = null;
        let statusChart = null;

        document.addEventListener('DOMContentLoaded', function() {
            loadPhones();
            setDefaultDates();
            generateReport();
        });

        document.getElementById('generateReportButton').addEventListener('click', generateReport);
        document.getElementById('refreshReportsButton').addEventListener('click', generateReport);
        document.getElementById('exportButton').addEventListener('click', exportReport);
        document.getElementById('toggleBillingButton').addEventListener('click', toggleBillingTable);

        function setDefaultDates() {
            const now = new Date();
            const monthAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);

            document.getElementById('reportStartDate').value = monthAgo.toISOString().split('T')[0];
            document.getElementById('reportEndDate').value = now.toISOString().split('T')[0];
        }

        async function loadPhones() {
            try {
                const response = await fetch('/api/phones');
                if (response.ok) {
                    phonesData = await response.json();
                    populatePhoneFilter();
                }
            } catch (error) {
                showError('Ошибка загрузки телефонов: ' + error.message);
            }
        }

        function populatePhoneFilter() {
            const select = document.getElementById('reportPhoneFilter');
            select.innerHTML = '<option value="">Все телефоны</option>';

            phonesData.forEach(phone => {
                const option = `<option value="${phone.id}">${phone.number} (${phone.contactName})</option>`;
                select.innerHTML += option;
            });
        }

        async function generateReport() {
            showLoading(true);

            try {
                await Promise.all([
                    loadStatistics(),
                    loadBilling()
                ]);

                updateStatisticsCards();
                updateChart();
                updateBillingTable();

            } catch (error) {
                showError('Ошибка генерации отчета: ' + error.message);
            } finally {
                showLoading(false);
            }
        }

        async function loadStatistics() {
            const startDate = document.getElementById('reportStartDate').value;
            const endDate = document.getElementById('reportEndDate').value;
            const phoneId = document.getElementById('reportPhoneFilter').value;

            let url = '/api/calls/statistics?';
            const params = [];

            if (startDate) params.push(`startDate=${startDate}`);
            if (endDate) params.push(`endDate=${endDate}`);
            if (phoneId) params.push(`phoneId=${phoneId}`);

            url += params.join('&');

            const response = await fetch(url);
            if (response.ok) {
                currentStatistics = await response.json();
            } else {
                throw new Error('Ошибка загрузки статистики');
            }
        }

        async function loadBilling() {
            const startDate = document.getElementById('reportStartDate').value;
            const endDate = document.getElementById('reportEndDate').value;
            const phoneId = document.getElementById('reportPhoneFilter').value;

            let url = '/api/calls/billing?';
            const params = [];

            if (startDate) params.push(`startDate=${startDate}`);
            if (endDate) params.push(`endDate=${endDate}`);
            if (phoneId) params.push(`phoneId=${phoneId}`);

            url += params.join('&');

            const response = await fetch(url);
            if (response.ok) {
                currentBilling = await response.json();
            } else {
                throw new Error('Ошибка загрузки биллинга');
            }
        }

        function updateStatisticsCards() {
            if (!currentStatistics) return;

            document.getElementById('statsTotal').textContent = currentStatistics.totalCalls;
            document.getElementById('statsOutgoing').textContent = currentStatistics.outgoingCalls;
            document.getElementById('statsIncoming').textContent = currentStatistics.incomingCalls;
            document.getElementById('statsMissed').textContent = currentStatistics.missedCalls;

            document.getElementById('totalDuration').textContent = currentStatistics.totalDurationFormatted;
            document.getElementById('totalCost').textContent = currentStatistics.totalCost.toFixed(2) + ' ₽';
            document.getElementById('avgDuration').textContent = currentStatistics.averageDurationFormatted;

            const avgCost = currentStatistics.totalCalls > 0 ? (currentStatistics.totalCost / currentStatistics.totalCalls) : 0;
            document.getElementById('avgCost').textContent = avgCost.toFixed(2) + ' ₽';
        }

        function updateChart() {
            if (!currentStatistics) return;

            const ctx = document.getElementById('statusChart').getContext('2d');

            if (statusChart) {
                statusChart.destroy();
            }

            const completedCalls = currentStatistics.totalCalls - currentStatistics.missedCalls;

            statusChart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['Завершенные', 'Пропущенные', 'Входящие', 'Исходящие'],
                    datasets: [{
                        data: [
                            completedCalls,
                            currentStatistics.missedCalls,
                            currentStatistics.incomingCalls,
                            currentStatistics.outgoingCalls
                        ],
                        backgroundColor: [
                            '#28a745',
                            '#dc3545',
                            '#17a2b8',
                            '#ffc107'
                        ],
                        borderWidth: 2,
                        borderColor: '#fff'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
        }

        function updateBillingTable() {
            if (!currentBilling) return;

            document.getElementById('billingTotal').textContent = currentBilling.totalCost.toFixed(2) + ' ₽';

            const tbody = document.getElementById('billingTableBody');
            tbody.innerHTML = '';

            if (currentBilling.items.length === 0) {
                tbody.innerHTML = '<tr><td colspan="6" class="text-center">Нет данных за выбранный период</td></tr>';
                return;
            }

            currentBilling.items.forEach(item => {
                const row = document.createElement('tr');
                const callDate = new Date(item.callDate).toLocaleString('ru-RU');
                const cost = item.cost ? item.cost.toFixed(2) + ' ₽' : '-';

                row.innerHTML = `
                    <td>${item.callId}</td>
                    <td>${callDate}</td>
                    <td>${item.fromPhoneNumber}</td>
                    <td>${item.toPhoneNumber}</td>
                    <td>${item.durationFormatted}</td>
                    <td class="text-end">${cost}</td>
                `;

                tbody.appendChild(row);
            });
        }

        function toggleBillingTable() {
            const container = document.getElementById('billingTableContainer');
            const button = document.getElementById('toggleBillingButton');
            const icon = button.querySelector('i');

            if (container.style.display === 'none') {
                container.style.display = 'block';
                icon.className = 'fas fa-eye-slash';
            } else {
                container.style.display = 'none';
                icon.className = 'fas fa-eye';
            }
        }

        function exportReport() {
            if (!currentBilling || !currentStatistics) {
                showError('Сначала сгенерируйте отчет');
                return;
            }

            let csvContent = "data:text/csv;charset=utf-8,";

            csvContent += "Статистика звонков\n";
            csvContent += `Период,${currentStatistics.startDate} - ${currentStatistics.endDate}\n`;
            csvContent += `Всего звонков,${currentStatistics.totalCalls}\n`;
            csvContent += `Исходящие,${currentStatistics.outgoingCalls}\n`;
            csvContent += `Входящие,${currentStatistics.incomingCalls}\n`;
            csvContent += `Пропущенные,${currentStatistics.missedCalls}\n`;
            csvContent += `Общая длительность,${currentStatistics.totalDurationFormatted}\n`;
            csvContent += `Общая стоимость,${currentStatistics.totalCost}\n\n`;

            csvContent += "ID звонка,Дата и время,От,Кому,Длительность,Стоимость\n";

            currentBilling.items.forEach(item => {
                const callDate = new Date(item.callDate).toLocaleString('ru-RU');
                const cost = item.cost || 0;
                csvContent += `${item.callId},"${callDate}",${item.fromPhoneNumber},${item.toPhoneNumber},${item.durationFormatted},${cost}\n`;
            });

            const encodedUri = encodeURI(csvContent);
            const link = document.createElement("a");
            link.setAttribute("href", encodedUri);
            link.setAttribute("download", `call_report_${new Date().toISOString().split('T')[0]}.csv`);
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        function showLoading(show) {
            const button = document.getElementById('generateReportButton');
            const icon = button.querySelector('i');

            if (show) {
                button.disabled = true;
                icon.className = 'fas fa-spinner fa-spin';
            } else {
                button.disabled = false;
                icon.className = 'fas fa-chart-bar';
            }
        }

        function showError(message) {
            alert(message);
        }
    </script>
}